#!/bin/bash

SCRIPT_DIR=`dirname $0`
DISTRIBUTION_DIR=`dirname $SCRIPT_DIR`

BLUE_PORT=9002
GREEN_PORT=9003

OLD_PORT=`AWS_DEFAULT_REGION=us-west-2 /usr/bin/aws elb describe-load-balancers --load-balancer-name triggers-octoblu-com | jq '.LoadBalancerDescriptions[0].ListenerDescriptions[0].Listener.InstancePort'`

NEW_COLOR=blue
NEW_PORT=${BLUE_PORT}
if [ "${OLD_PORT}" == "${BLUE_PORT}" ]; then
  NEW_COLOR=green
  NEW_PORT=${GREEN_PORT}
fi

# Always create both services
kubectl create -f $SCRIPT_DIR/triggers-service-green-service.yaml
kubectl create -f $SCRIPT_DIR/triggers-service-blue-service.yaml

kubectl delete pods -lname=triggers-service-${NEW_COLOR}
kubectl delete rc -lname=triggers-service-${NEW_COLOR}
kubectl create -f $SCRIPT_DIR/triggers-service-${NEW_COLOR}-controller.yaml


sleep 30

AWS_DEFAULT_REGION=us-west-2 /usr/bin/aws elb delete-load-balancer-listeners --load-balancer-name triggers-octoblu-com --load-balancer-ports 80
AWS_DEFAULT_REGION=us-west-2 /usr/bin/aws elb delete-load-balancer-listeners --load-balancer-name triggers-octoblu-com --load-balancer-ports 443
AWS_DEFAULT_REGION=us-west-2 /usr/bin/aws elb create-load-balancer-listeners --load-balancer-name triggers-octoblu-com --listeners Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=${NEW_PORT}
AWS_DEFAULT_REGION=us-west-2 /usr/bin/aws elb create-load-balancer-listeners --load-balancer-name triggers-octoblu-com --listeners Protocol=HTTPS,LoadBalancerPort=443,InstanceProtocol=HTTP,InstancePort=${NEW_PORT},SSLCertificateId=arn:aws:iam::822069890720:server-certificate/startinter.octoblu.com
